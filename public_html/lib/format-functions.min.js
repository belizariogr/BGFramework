function formatPhone(input){var str=input+'';str=str.replace(/\D/g,'');if(str.length===11){str=str.replace(/^(\d{2})(\d{5})(\d{4})/,'($1)$2-$3');}else{str=str.replace(/^(\d{2})(\d{4})(\d{4})/,'($1)$2-$3');}return str;};
function getNumbers(n){
	n = n + "";
	r = "";
	for (var i = 0; i < n.length; i++){
		if ('0123456789'.indexOf(n.charAt(i)) !== -1)
			r += n.charAt(i);
	}
	return r;
}
function replaceChar(str,c,r){
	var res = "";
	for (var i = 0; i < str.length; i++){
		if (str.charAt(i) !== c)
			res += str.charAt(i);
		else
			res += r
	}
	return res;
}
function lpad(str, padString, length){while(str.length<length)str=padString+str;return str;}
function rpad(str, padString, length){while(str.length<length)str+=padString;return str;}
function numberWithThousandSep(number,sep,isDecimal){
	var b = number + "";
	var r = '';
	sep = sep || ',';
	if (b.length <= 3)
		return number;
	while(b){
		if (isDecimal){
			if (b.length <= 3) {
				r = r + sep + b;
				b = '';
			}else{
				r += (r ? sep : '') + b.slice(0, 3);
				b = b.slice(3, b.length);
			}
		}else{
			if (b.length <= 3) {
				r = b + sep + r;
				b = '';
			}else{
				r = b.slice(b.length - 3, b.length) + (r ? sep : '') + r;
				b = b.slice(0, b.length - 3);
			}
		}
	}
	return r;
}
function getFormatProps(format,formatSettings){
	var p = {decimalCount: 0, showThousandSeparator: false, thousandSeparator: ',', decimalSeparator: '.'};
	if (format){
		var buf = format.split('.');
		if (buf.length >= 2)
			p.decimalCount = buf[1].split("0").length - 1;
		p.showThousandSeparator = buf[0].split(",").length - 1 > 0;
	};
	if (formatSettings){
		p.thousandSeparator = formatSettings.thousandSeparator || thousandSeparator;
		p.decimalSeparator = formatSettings.decimalSeparator || decimalSeparator;
	};
	return p;
}

function formatNumber(value,format,formatSettings){
	var f = getFormatProps(format,formatSettings);
	var v = 0;
	if (!isNaN(Number(value))){
		var aux = Math.pow(10, f.decimalCount);
		v = Math.round(value * aux) + "";
	} else if (value){
		v = getNumbers(value);
	}

	if (v.length <= f.decimalCount)
		return '0' + f.decimalSeparator + lpad(v,'0',f.decimalCount);
	else{
		if (v.length >= 15)
			v = v.slice(0, 14);
		var i = String(Number(v.slice(0, v.length - f.decimalCount)));
		if (f.showThousandSeparator)
			i = numberWithThousandSep(i, f.thousandSeparator);
		var d = v.slice(v.length - f.decimalCount, v.length);
		if (f.showThousandSeparator)
			d = numberWithThousandSep(d, f.showThousandSeparator, true);
		return i + f.decimalSeparator + d;
	}
}

function strToNumber(value,formatSettings){
	if (!value) return 0;
	if (!isNaN(value))return value;
	var f = getFormatProps(null,formatSettings);
	var r = replaceChar(replaceChar(value, f.thousandSeparator, ''), f.decimalSeparator, '.');
	r = Number(r);
	return r;
}